# Copied from here:
# https://github.com/epinio/application/blob/main/config/crd/bases/application.epinio.io_appcharts.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: appcharts.application.epinio.io
spec:
  group: application.epinio.io
  names:
    kind: AppChart
    listKind: AppChartList
    plural: appcharts
    singular: appchart
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AppChart is the Schema for the appcharts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AppChartSpec defines the desired state of AppChart
            properties:
              description:
                description: Description of the chart. Long form to be used in detailed
                  displays
                type: string
              helmChart:
                description: HelmChart is the name of the Helm chart used to deploy
                  an application.
                type: string
              helmRepo:
                description: HelmRepo is the URL to the Helm repository where to fetch
                  the helm chart. This can be empty. In that case the HelmChart field
                  has to reference the chart as full URL instead of as a simple name.
                type: string
              settings:
                additionalProperties:
                  properties:
                    enum:
                      description: Enumeration of allowed values, for types string,
                        number, integer
                      items:
                        type: string
                      type: array
                    maximum:
                      description: Maximal allowed value, for number, integer
                      type: string
                    minimum:
                      description: Minimal allowed value, for number, integer
                      type: string
                    type:
                      description: Type of the setting (string, bool, number, or integer)
                      type: string
                  required:
                  - type
                  type: object
                description: Settings declares the fields underneath `userValues`
                  the user is allowed to customize when deploying an application with
                  the helm chart referenced by this app chart.
                type: object
              shortDescription:
                description: ShortDescription of the chart. To be used in list displays
                type: string
              values:
                additionalProperties:
                  type: string
                description: Values provides settings, i.e. field names and values
                  to customize the referenced helm chart when deploying an application
                  with this app chart. Note that user-configurable settings are declared
                  with `Settings` instead. While nothing checks against exposing a
                  field set here to the user this is strongly discouraged, to avoid
                  confusion.
                type: object
            type: object
          status:
            description: AppChartStatus defines the observed state of AppChart
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
