# Please uncomment and specify values for these options as per your requirements.
kvdb:
ownEtcdOption: none
etcdAuth: none
etcdType: none                        # KVDB type

etcd:
  credentials: none:none              # Username and password for ETCD authentication in the form user:password
  ca: none                            # Name of CA file for ETCD authentication. server.ca
  cert: none                          # Name of certificate for ETCD authentication. Should be server.crt
  key: none                           # Name of certificate key for ETCD authentication Should be server.key
consul:
  token: none                         # ACL token value used for Consul authentication. (example: 398073a8-5091-4d9c-871a-bbbeb030d1f6)
region: none                          # US or EU regions for Portworx hosted etcds

dataInterface: none                   # Name of the interface <ethX>
managementInterface: none             # Name of the interface <ethX>
platformOptions: none                 # AKS, EKS or GKE platforms

customRegistryURL:
registrySecret:

clusterName: mycluster                # This is the default. please change it to your cluster name.
secretType: k8s                      # Defaults to None, but can be AWS / KVDB / Vault.
envVars: none                         # NOTE: This is a ";" seperated list of environment variables. For eg: MYENV1=myvalue1;MYENV2=myvalue2
stork: true                           # Use Stork https://docs.portworx.com/scheduler/kubernetes/stork.html for hyperconvergence.
storkVersion: 2.6.3

lighthouse: true
lighthouseVersion: 2.0.7
lighthouseSyncVersion: 2.0.7
lighthouseStorkConnectorVersion: 2.0.7

deployOnMaster: false                 # For POC only
csi: false                            # Enable CSI

serviceAccount:
  hook:
    create: true
    name:

deploymentType: oci                   # accepts "oci" or "docker"
imageType: none                       #
imageVersion: 2.7.1                 # Version of the PX Image.

result: none
environment: none
onpremStorage: none

maxStorageNodes: none
journalDevice: none

usefileSystemDrive: false             # true/false Instructs PX to use an unmounted Drive even if it has a filesystem.
usedrivesAndPartitions: false         # Use unmounted disks even if they have a partition or filesystem on it. PX will never use a drive or partition that is mounted. (useDrivesAndPartitions)

provider: none
deviceConfig: none

drive_1:
  aws:
    type: none
    size: none
    iops: none
  gc:
    type: standard
    size: 1000

drive_2:
  aws:
    type: none
    size: none
    iops: none
  gc:
    type: none
    size: none

drive_3:
  aws:
    type: none
    size: none
    iops: none
  gc:
    type: none
    size: none

drive_4:
  aws:
    type: none
    size: none
    iops: none
  gc:
    type: none
    size: none

drive_5:
  aws:
    type: none
    size: none
    iops: none
  gc:
    type: none
    size: none

drive_6:
  aws:
    type: none
    size: none
    iops: none
  gc:
    type: none
    size: none

drive_7:
  aws:
    type: none
    size: none
    iops: none
  gc:
    type: none
    size: none

drive_8:
  aws:
    type: none
    size: none
    iops: none
  gc:
    type: none
    size: none

drive_9:
  aws:
    type: none
    size: none
    iops: none
  gc:
    type: none
    size: none

drive_10:
  aws:
    type: none
    size: none
    iops: none
  gc:
    type: none
    size: none

existingDisk1: none
existingDisk2: none
existingDisk3: none
existingDisk4: none
existingDisk5: none
