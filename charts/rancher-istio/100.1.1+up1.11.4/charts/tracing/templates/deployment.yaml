apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tracing.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.provider }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.provider }}
  template:
    metadata:
      labels:
        app: {{ .Values.provider }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
{{- if .Values.jaeger.podAnnotations }}
{{ toYaml .Values.jaeger.podAnnotations | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: jaeger
          image: "{{ template "system_default_registry" . }}{{ .Values.jaeger.repository }}:{{ .Values.jaeger.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          env:
          {{- if eq .Values.jaeger.spanStorageType "badger" }}
          - name: BADGER_EPHEMERAL
            value: "false"
          - name: SPAN_STORAGE_TYPE
            value: "badger"
          - name: BADGER_DIRECTORY_VALUE
            value: "/badger/data"
          - name: BADGER_DIRECTORY_KEY
            value: "/badger/key"
          {{- end }}
          - name: COLLECTOR_ZIPKIN_HOST_PORT
            value: "9411"
          - name: MEMORY_MAX_TRACES
            value: "{{ .Values.jaeger.memory.max_traces }}"
          - name: QUERY_BASE_PATH
            value: {{ if .Values.contextPath }} {{ .Values.contextPath }} {{ else }} /{{ .Values.provider }} {{ end }}
          livenessProbe:
            httpGet:
              path: /
              port: 14269
          readinessProbe:
            httpGet:
              path: /
              port: 14269
{{- if eq .Values.jaeger.spanStorageType "badger" }}
          volumeMounts:
            - name: data
              mountPath: /badger
{{- end }}
          resources:
{{- if .Values.jaeger.resources }}
{{ toYaml .Values.jaeger.resources | indent 12 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 12 }}
{{- end }}
      affinity:
      {{- include "nodeAffinity" . | indent 6 }}
      {{- include "podAntiAffinity" . | indent 6 }}
     {{- if .Values.global.rbac.pspEnabled }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: {{ include "tracing.fullname" . }}
      {{- end }}
{{- if eq .Values.jaeger.spanStorageType "badger" }}
      volumes:
      - name: data
{{- if .Values.jaeger.persistentVolumeClaim.enabled }}
        persistentVolumeClaim:
          claimName: istio-jaeger-pvc
{{- else }}
        emptyDir: {}
{{- end }}
{{- end }}
