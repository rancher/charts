---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "s3gw.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
{{ include "s3gw.selectorLabels" . | indent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
{{ include "s3gw.selectorLabels" . | indent 8 }}
    spec:
{{- if .Values.imageCredentials }}
      imagePullSecrets:
        - name: {{ .Chart.Name }}-image-pull-secret
{{- end }}
      serviceAccountName: {{ include "s3gw.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "s3gw.image" . | quote }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy }}
          args:
            - "--rgw-dns-name"
{{- if .Values.ingress.enabled }}
            - {{ .Values.serviceName }}.{{ .Values.publicDomain }},
              {{ .Values.serviceName }}.{{ .Release.Namespace }}.{{ .Values.privateDomain }}
{{- else}}
            - {{ .Values.serviceName }}.{{ .Release.Namespace }}.{{ .Values.privateDomain }}
{{- end }}
            - "--rgw-backend-store"
            - sfs
            - "--debug-rgw"
            - '{{ .Values.logLevel }}'
            - "--rgw_frontends"
            - "beast port=7480 ssl_port=7481
                ssl_certificate=/s3gw-cluster-ip-tls/tls.crt
                ssl_private_key=/s3gw-cluster-ip-tls/tls.key"
          ports:
            - containerPort: 7480
              name: s3
            - containerPort: 7481
              name: s3-tls
          envFrom:
            - secretRef:
                name: {{ .Values.defaultUserCredentialsSecret }}
          volumeMounts:
            - name: s3gw-lh-store
              mountPath: /data
            - name: s3gw-cluster-ip-tls
              mountPath: /s3gw-cluster-ip-tls
      nodeSelector:
        {{- include "linux-node-selector" . | nindent 8 }}
      tolerations:
        {{- include "linux-node-tolerations" . | nindent 8 }}
      volumes:
        - name: s3gw-lh-store
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
        - name: s3gw-cluster-ip-tls
          secret:
            secretName: s3gw-cluster-ip-tls
            optional: false
{{- if .Values.ui.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Chart.Name }}-ui'
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "s3gw.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
{{ include "s3gw-ui.selectorLabels" . | indent 6 }}
  strategy: {}
  template:
    metadata:
      labels:
{{ include "s3gw-ui.selectorLabels" . | indent 8}}
    spec:
{{- if .Values.imageCredentials }}
      imagePullSecrets:
        - name: {{ .Chart.Name }}-image-pull-secret
{{- end }}
      serviceAccountName: {{ include "s3gw.serviceAccountName" . }}
      containers:
        - name: s3gw-ui
          image: {{ include "s3gw-ui.image" . | quote }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.ui.imagePullPolicy }}
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: s3gw-config
            - secretRef:
                name: {{ .Values.defaultUserCredentialsSecret }}
      nodeSelector:
        {{- include "linux-node-selector" . | nindent 8 }}
      tolerations:
        {{- include "linux-node-tolerations" . | nindent 8 }}
{{- end }}
