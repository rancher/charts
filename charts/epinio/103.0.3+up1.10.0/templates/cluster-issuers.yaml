---
# Self-signed issuer
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned-issuer
spec:
  selfSigned: {}

---
# Private CA (epinio-ca) issuer
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: epinio-ca
spec:
  ca:
    secretName: epinio-ca-root

{{- if eq .Values.global.tlsIssuer "letsencrypt-production" }}
---
# Let's encrypt production issuer
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-production
spec:
  acme:
    email: {{ .Values.global.tlsIssuerEmail | default .Values.email | quote }}
    preferredChain: ""
    privateKeySecretRef:
      name: letsencrypt-production
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          {{- if .Values.ingress.ingressClassName }}
          class: "{{ .Values.ingress.ingressClassName }}"
          {{- end }}
          ingressTemplate:
            metadata:
              annotations:
                traefik.ingress.kubernetes.io/router.entrypoints: websecure
                traefik.ingress.kubernetes.io/router.tls: "true"

{{- else if eq .Values.global.tlsIssuer "letsencrypt-staging" }}
---
# Let's encrypt staging issuer
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    email: {{ .Values.global.tlsIssuerEmail | default .Values.email | quote }}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
    - http01:
        ingress:
          {{- if .Values.ingress.ingressClassName }}
          class: "{{ .Values.ingress.ingressClassName }}"
          {{- end }}
          ingressTemplate:
            metadata:
              annotations:
                traefik.ingress.kubernetes.io/router.entrypoints: websecure
                traefik.ingress.kubernetes.io/router.tls: "true"

{{- end }}
