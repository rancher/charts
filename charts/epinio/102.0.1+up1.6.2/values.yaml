## Default values for Epinio Helm Chart.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

# The email address you are planning to use for getting notifications about your certificates.
email: "epinio@suse.com"

image:
  epinio:
    repository: rancher/mirrored-epinio-epinio-server
    tag: v1.6.2
  bash:
    repository: rancher/mirrored-epinio-epinio-unpacker
    tag: v1.6.2
  awscli:
    repository: rancher/mirrored-amazon-aws-cli
    tag: 2.9.14
  skopeo:
    repository: rancher/mirrored-skopeo-skopeo
    tag: v1.10.0
  kubectl:
    repository: rancher/kubectl
    tag: v1.22.6
  builder:
    repository: rancher/mirrored-paketobuildpacks-builder
    tag: 0.2.289-full

server:
  # Domain which serves the Rancher UI (to access the API)
  accessControlAllowOrigin: ""
  # increase this value to increase all timeouts by the same factor
  timeoutMultiplier: 1
  # Increase this value to instruct the API server to produce more debug output
  traceLevel: 0
  # The ingressClassName is used to select the ingress controller for apps. If empty ingress.ingressClassName (see below) is used
  ingressClassName: ""
  # Disable tracking of the Epinio and Kubernetes cluster version
  disableTracking: false
ingress:
  # The ingressClassName is used to select the ingress controller for the server. If empty no class will be added to the ingresses.
  ingressClassName: ""
  # Annotations to add to the API ingress
  # e.g.: --set 'ingress.annotations.nginx\.ingress\.kubernetes\.io/ssl-redirect=false'
  annotations: {}
  # nginxSSLRedirect to controll https->http redirects
  nginxSSLRedirect: "true"

certManagerNamespace: cert-manager

# Connection details for the S3 storage
s3:
  endpoint: s3.amazonaws.com
  bucket: ""
  region: ""
  accessKeyID: ""
  secretAccessKey: ""
  useSSL: true
  # Set it to an existing secret if S3 is using a self signed cert
  certificateSecret: ""

api:
  # Default users
  users:
    - username: admin
      passwordBcrypt: "$2a$10$6bCi5NMstMK781In7JGiL.B44pgoplUb330FQvm6mVXMppbXBPiXS"
      role: admin
    - username: epinio
      passwordBcrypt: "$2a$10$6bCi5NMstMK781In7JGiL.B44pgoplUb330FQvm6mVXMppbXBPiXS"
      role: user
      workspaces:
        - workspace

# Dex subchart values -- None for now, and sub chart disabled
dex:
  enabled: true
  # hardcode this, to avoid problems with release name
  fullnameOverride: "dex"
  configSecret:
    create: false
    name: "dex-config"

# Extra environment variables passed to the epinio-server pod.
# extraEnv:
# - name: MY_ENV_VAR
#   value: "1.0"
# Minio subchart values
minio:
  enabled: true
  # hardcode this, to avoid problems with release name
  fullnameOverride: minio
  existingSecret: minio-creds
  tls:
    enabled: true
    certSecret: minio-tls
    publicCrt: tls.crt
    privateKey: tls.key
  persistence:
    size: 2Gi
  drivesPerNode: 4
  replicas: 1
  resources:
    requests:
      memory: 1Gi
  makeUserJob:
    podAnnotations:
      linkerd.io/inject: disabled

epinio-ui:
  enabled: true
  epinioTheme: light
  epinioVersion: "v1.6.2"
  ingress:
    enabled: false

kubed:
  enabled: true
  fullnameOverride: kubed
  enableAnalytics: false

containerregistry:
  enabled: true
  image:
    registry:
      repository: rancher/mirrored-library-registry
      tag: 2.8.1
    nginx:
      repository: rancher/mirrored-library-nginx
      tag: 1.23.2-alpine
  imagePullPolicy: IfNotPresent
  # The ingressClassName is used to select the ingress controller. If
  # empty no class will be added to the ingresses.
  ingressClassName: ""

serviceCatalog:
  # Enable service catalog service for development
  enableDevServices: true

global:
  rbac:
    pspEnabled: false
  # The domain that will be used to access the epinio API server and the registry
  domain: ""
  # Connection details for the container registry.
  registryURL: ""  # Skip if containerregistry.enabled is true
  registryUsername: "admin"
  registryPassword: "changeme"
  registryNamespace: "apps"  # Used in registry path when pushing -> "external.tld/apps/APPNAME"
  # The name of the cluster issuer to use.
  # Epinio creates three options: 'epinio-ca', 'letsencrypt-production', and 'selfsigned-issuer'.
  tlsIssuer: "epinio-ca"
  # The URL of the container registry from where to pull container images for the various
  # created Pods. Don't confuse this registry with the "Epinio registry" which is the one
  # where Epinio stores the application images.
  cattle:
    systemDefaultRegistry: ""
