apiVersion: v1
kind: Service
metadata:
  name: tracing
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- range $key, $val := .Values.service.annotations }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
  labels:
    app: {{ .Values.provider }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - name: {{ .Values.service.name }}
      port: {{ .Values.service.externalPort }}
      protocol: TCP
      targetPort: 16686
  selector:
    app: {{ .Values.provider }}
---
# Jaeger implements the Zipkin API. To support swapping out the tracing backend, we use a Service named Zipkin.
apiVersion: v1
kind: Service
metadata:
  name: zipkin
  namespace: {{ .Release.Namespace }}
  labels:
    name: zipkin
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  ports:
    - name: {{ .Values.service.name }}
      port: {{ .Values.zipkin.queryPort }}
      targetPort: {{ .Values.zipkin.queryPort }}
  selector:
    app: {{ .Values.provider }}
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.provider }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
  - name: jaeger-collector-http
    port: 14268
    targetPort: 14268
    protocol: TCP
  - name: jaeger-collector-grpc
    port: 14250
    targetPort: 14250
    protocol: TCP
  selector:
    app: {{ .Values.provider }}
