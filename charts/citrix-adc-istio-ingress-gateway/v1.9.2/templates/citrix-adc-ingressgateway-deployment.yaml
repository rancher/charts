{{- if eq .Values.citrixCPX true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: citrix-ingressgateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
  template:
    metadata:
      labels:
        app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        prometheus.io/port: "{{ .Values.metricExporter.port }}"
        prometheus.io/scrape: "true"
    spec:
      volumes:
      - name: nslogin
        secret:
          secretName: nslogin
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default
      - name: citrix-ingressgateway-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway
      - name: citrix-ingressgateway-ca-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-ca-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway
{{- if eq .Values.ingressGateway.exposeMutipleApps true }}
{{- range .Values.ingressGateway.secretVolumes }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName | quote }}
          optional: true
{{- end }}
{{- end }}
      - name: cpx-conf
        emptyDir: {}
      containers:
{{- if eq .Values.metricExporter.required true }}
        - name: exporter
          image: {{ .Values.metricExporter.image }}:{{ .Values.metricExporter.version }}
          imagePullPolicy: IfNotPresent
          args:
          - "--target-nsip=127.0.0.1"
          - "--port={{ .Values.metricExporter.port }}"
          - "--log-level={{ .Values.metricExporter.logLevel }}"
          env:
          - name: NS_USER
            valueFrom:
              secretKeyRef:
                name: nslogin
                key: username
          - name: NS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: nslogin
                key: password
{{- end }}
        - name: istio-adaptor
          image: {{ .Values.istioAdaptor.image }}:{{ .Values.istioAdaptor.tag }}
          imagePullPolicy: {{ .Values.istioAdaptor.imagePullPolicy }} 
          args:
          - -pilot-location
{{- if eq .Values.istioAdaptor.secureConnect true }}
          - {{ .Values.istioPilot.name}}.{{.Values.istioPilot.namespace }}:{{ .Values.istioPilot.secureGrpcPort }} # istio-pilot.istio-system:15011
{{- else }}
          - {{ .Values.istioPilot.name}}.{{.Values.istioPilot.namespace }}:{{ .Values.istioPilot.insecureGrpcPort }} # istio-pilot.istio-system:15010
{{- end }}
          - -proxy-type
          - {{ .Values.istioAdaptor.proxyType | default "router" | quote }}
          - -pilot-SAN
          - {{ .Values.istioPilot.SAN }}
          - -netscaler-url
          - "http://127.0.0.1" 
          - -secure-connect={{ .Values.istioAdaptor.secureConnect}}
          - -adm-ip
{{- if .Values.istioAdaptor.ADMIP }}
          - {{ .Values.istioAdaptor.ADMIP }}
{{- else }}
          - ""
{{- end }}
{{- if .Values.istioAdaptor.coeURL }}
          - -coe-url
          - {{ .Values.istioAdaptor.coeURL }}
{{- end }}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
               fieldPath: status.podIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: APPLICATION_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app']
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 32024 # UID of istio-adaptor container's user
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /etc/nslogin 
            name: nslogin
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-certs # Make sure that Gateway definition has this path mentioned in server.tls section for SIMPLE TLS
            name: citrix-ingressgateway-certs
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-ca-certs # Make sure that Gateway definition has this path mentioned in server.tls section for MUTUAL TLS
            name: citrix-ingressgateway-ca-certs
            readOnly: true
{{- if eq .Values.ingressGateway.exposeMutipleApps true }}
{{- range .Values.ingressGateway.secretVolumes }}
          - name: {{ .name }}
            mountPath: {{ .mountPath | quote }}
            readOnly: true
{{- end }}
{{- end }}
        - name: citrix-ingressgateway
          image: "{{ .Values.ingressGateway.image }}:{{ .Values.ingressGateway.tag }}"
          imagePullPolicy: {{ .Values.ingressGateway.imagePullPolicy }}
          securityContext:
            privileged: true
          ports:
            - containerPort: 80
            - containerPort: 443
{{- if .Values.ingressGateway.mgmtHttpPort }}
            - containerPort: {{ .Values.ingressGateway.mgmtHttpPort }}
{{- end }}
{{- if .Values.ingressGateway.mgmtHttpsPort }}
            - containerPort: {{ .Values.ingressGateway.mgmtHttpsPort }}
{{- end }}
{{- if eq .Values.ingressGateway.exposeNonHttpService true }}
{{- range .Values.ingressGateway.tcpPort }}
            - containerPort: {{ .port }}
{{- end }}
{{- end }}
          volumeMounts:
          - mountPath: /cpx/conf/
            name: cpx-conf
          env:
          - name: "EULA"
            value: "{{ .Values.ingressGateway.EULA }}"
          - name: "MGMT_HTTP_PORT"
            value: "{{ .Values.ingressGateway.mgmtHttpPort }}"
          - name: "MGMT_HTTPS_PORT"
            value: "{{ .Values.ingressGateway.mgmtHttpsPort }}"
          - name: "NS_CPX_LITE"
            value: "{{ .Values.ingressGateway.lightWeightCPX }}"
{{- if or .Values.istioAdaptor.coeURL .Values.istioAdaptor.ADMIP }}
          - name: "NS_ENABLE_NEWNSLOG"
            value: "1"
{{- end }}
          - name: "KUBERNETES_TASK_ID"
            value: ""
          - name: "LS_IP"
            value: {{ .Values.istioAdaptor.ADMIP | default "" }} 
          - name: "LS_PORT"
            value: "{{ .Values.ingressGateway.licenseServerPort}}"
{{- if .Values.istioAdaptor.ADMFingerPrint }}
          - name: "NS_MGMT_SERVER"
            value: {{ .Values.istioAdaptor.ADMIP }}
          - name: "NS_MGMT_FINGER_PRINT"
            value: {{ .Values.istioAdaptor.ADMFingerPrint | quote }}
          - name: "NS_HTTP_PORT"
            value: {{ .Values.ingressGateway.mgmtHttpPort | quote }}
          - name: "NS_HTTPS_PORT"
            value: {{ .Values.ingressGateway.mgmtHttpsPort | quote }}
{{- end }}
          - name: "LOGSTREAM_COLLECTOR_IP"
            value: {{ .Values.istioAdaptor.ADMIP | default ""}} 

---
{{ else }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: citrix-ingressgateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
  template:
    metadata:
      labels:
        app: {{ .Values.ingressGateway.label | default "citrix-ingressgateway" }}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        prometheus.io/port: "{{ .Values.metricExporter.port }}"
        prometheus.io/scrape: "true"
    spec:
      containers:
{{- if eq .Values.metricExporter.required true }}
      - name: exporter
        image: {{ .Values.metricExporter.image }}:{{ .Values.metricExporter.version }}
        imagePullPolicy: {{ .Values.metricExporter.imagePullPolicy }}
        args:
{{- if .Values.istioAdaptor.netscalerUrl }}
        - "--target-nsip={{- include "exporter_nsip" . -}}"
{{- end }}
        - "--port={{ .Values.metricExporter.port }}"
        - "--secure={{ .Values.metricExporter.secure | lower}}"
        - "--log-level={{ .Values.metricExporter.logLevel }}"
        env:
        - name: NS_USER
          valueFrom:
            secretKeyRef:
              name: nslogin
              key: username
        - name: NS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nslogin
              key: password
{{- end }}
      - name: istio-adaptor
        image: {{ .Values.istioAdaptor.image }}:{{ .Values.istioAdaptor.tag }} 
        imagePullPolicy: {{ .Values.istioAdaptor.imagePullPolicy }}  
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: APPLICATION_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        args: 
        - -pilot-location
{{- if eq .Values.istioAdaptor.secureConnect true }}
        - {{ .Values.istioPilot.name}}.{{.Values.istioPilot.namespace }}:{{ .Values.istioPilot.secureGrpcPort }} # istio-pilot.istio-system:15011
{{- else }}
        - {{ .Values.istioPilot.name}}.{{.Values.istioPilot.namespace }}:{{ .Values.istioPilot.insecureGrpcPort }} # istio-pilot.istio-system:15010
{{- end }}
        - -proxy-type
        - {{ .Values.istioAdaptor.proxyType | default "router" | quote }} 
        - -pilot-SAN
        - {{ .Values.istioPilot.SAN }}
        - -netscaler-url
        - {{ required "Mention Citrix ADC IP/URL in https://<ip>[:port] format" .Values.istioAdaptor.netscalerUrl }}
        - -vserver-ip
        - {{ required "Mention Vserver IP to be configured on Citrix ADC" .Values.istioAdaptor.vserverIP }}
        - -secure-connect={{ .Values.istioAdaptor.secureConnect | default true }}
        # If using VPX/MPX as Ingress gateway, then specify the network profile name 
        # which was provided to Citrix Node Controller (CNC)
{{- if .Values.istioAdaptor.netProfile }}
        - -net-profile
        - {{ .Values.istioAdaptor.netProfile }}
{{- end }}
        - -adm-ip
        - "" 
{{- if .Values.istioAdaptor.coeURL }}
        - -coe-url
        - {{ .Values.istioAdaptor.coeURL }}
{{- end }}
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 32024 # UID of istio-adaptor container's user
        volumeMounts:
        - mountPath: /etc/certs
          name: istio-certs
          readOnly: true
        - mountPath: /etc/nslogin 
          name: nslogin
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-certs # Make sure that Gateway definition has this path mentioned in server.tls section for SIMPLE TLS
          name: citrix-ingressgateway-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-ca-certs # Make sure that Gateway definition has this path mentioned in server.tls section for MUTUAL TLS
          name: citrix-ingressgateway-ca-certs
          readOnly: true 
{{- if eq .Values.ingressGateway.exposeMutipleApps true }}
{{- range .Values.ingressGateway.secretVolumes }}
        - name: {{ .name }}
          mountPath: {{ .mountPath | quote }}
          readOnly: true
{{- end }}
{{- end }}
      volumes:
      - name: nslogin
        secret:
          secretName: nslogin
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default
      - name: citrix-ingressgateway-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway
      - name: citrix-ingressgateway-ca-certs
        secret:
          optional: true
          secretName: "citrix-ingressgateway-ca-certs" # IMPORTANT: This secret MUST BE created before deploying gateway and ingress-gateway
{{- if eq .Values.ingressGateway.exposeMutipleApps true }}
{{- range .Values.ingressGateway.secretVolumes }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName | quote }}
          optional: true
{{- end }}
{{- end }}
---
{{- end}}
